Operator summary
================

*Note: In some cases, arguments may also be given in a different order to the one listed.*

+----------+-----------------+-------------------------------------------+--------------------------------------+
| Op.      | Arguments       | Description                               | Examples                             |
+==========+=================+===========================================+======================================+
| !        | ``Any !``       | Boolean "not"                             | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |      5 !      ->  0                  |
|          |                 |                                           |      0 !      ->  1                  |
|          |                 |                                           |      "abc" !  ->  0                  |
|          |                 |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| #        | ``Num Num #``   | Power/exponentiation                      | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |      3 6 #   ->  729                 |
|          |                 |                                           |      2 .5 #  ->  1.4142135623730951  |
|          |                 |                                           |      0 0 #   ->  1                   |
|          |                 |                                           |                                      |
+          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array Any #`` | Find index, or -1 if not present          | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |      "abcde" 'b #   ->  1            |
|          |                 |                                           |      [1 2 3 4] 5 #  ->  -1           |
|          |                 |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| $        | ``Int $``       | Copy from stack                           | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |      Suppose stack is ["abc" -4 3]:  |
|          |                 |                                           |                                      |
|          |                 |                                           |        0 $   ->  3                   |
|          |                 |                                           |        1 $   ->  -4                  |
|          |                 |                                           |        2 $   ->  "abc"               |
|          |                 |                                           |        -1 $  ->  "abc"               |
|          |                 |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+