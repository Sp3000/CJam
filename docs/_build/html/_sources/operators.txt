Operator summary
================

Notes
-----

  * In some cases, arguments may also be given in a different order to the one listed.
  * Block operations which require an array will implicitly call ``,`` (range) when given a number.

+----------+-----------------+-------------------------------------------+--------------------------------------+
| Op.      | Arguments       | Description                               | Example                              |
+==========+=================+===========================================+======================================+
| !        | ``Any !``       | Boolean "not"                             | ``5 !  ->  0``                       |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| #        | ``Num Num #``   | Power/exponentiation                      | ``2 .5 #  ->  1.4142135623730951``   |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array Any #`` | Find index, or -1 if not present          | ``"banana" "na" #  ->  2``           |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| $        | ``Int $``       | Copy from stack                           | ``-4 "ab" 3 1$  ->  -4 "ab" 3 "ab"`` |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array $``     | Sort                                      | ``[3 0 2 1] $  ->  [0 1 2 3]``       |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| %        | ``Num Num %``   | Modulo                                    | ``27 5 %  ->  2``                    |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array Num %`` | Every nth                                 | ``[0 1 2 3 4] 2 %  ->  [0 2 4]``     |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array         | Split by                                  | ``"1,2,3" ', %    ->  ["1" "2" "3"]``|
|          | Array/Char %``  |                                           |                                      |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array Block   | Map                                       | ``[1 2 3] {2*3+} %  ->  [5 7 9]``    |
|          | %``             |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| &        | ``Int/Char      | Bitwise "and"                             | ``5 6 &  ->  4``                     |
|          | Int &``         |                                           |                                      |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array Any &`` | Setwise intersection                      | ``[6 1 8 1] [6 1 1 2] &  ->  [6 1]`` |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| (        | ``Num/Char (``  | Decrement                                 | ``42 (  ->  41``                     |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array (``     | Uncons from left                          | ``[2 7 1 8] (  ->  [7 1 8] 2``       |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| )        | ``Num/Char )``  | Increment                                 | ``42 )  ->  43``                     |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array )``     | Uncons from right                         | ``[2 7 1 8] )  ->  [2 7 1] 8``       |
+----------+-----------------+-------------------------------------------+--------------------------------------+