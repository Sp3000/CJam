Operator summary
================

Notes
-----

  * In some cases, arguments may also be given in a different order to the one listed.
  * Block operations which require an array will implicitly call ``,`` (range) when given a number.

+----------+-----------------+-------------------------------------------+--------------------------------------+
| Op.      | Arguments       | Description                               | Examples                             |
+==========+=================+===========================================+======================================+
| !        | ``Any !``       | Boolean "not"                             | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     5 !      ->  0                   |
|          |                 |                                           |     0 !      ->  1                   |
|          |                 |                                           |     "abc" !  ->  0                   |
|          |                 |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| #        | ``Num Num #``   | Power/exponentiation                      | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     3 6 #   ->  729                  |
|          |                 |                                           |     2 .5 #  ->  1.4142135623730951   |
|          |                 |                                           |     0 0 #   ->  1                    |
|          |                 |                                           |                                      |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array Any #`` | Find index, or -1 if not present          | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     "abcde" 'b #   ->  1             |
|          |                 |                                           |     [1 2 3 4] 5 #  ->  -1            |
|          |                 |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| $        | ``Int $``       | Copy from stack                           | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     Suppose stack is ["abc" -4 3]:   |
|          |                 |                                           |                                      |
|          |                 |                                           |       0 $   ->  3                    |
|          |                 |                                           |       1 $   ->  -4                   |
|          |                 |                                           |       2 $   ->  "abc"                |
|          |                 |                                           |       -1 $  ->  "abc"                |
|          |                 |                                           |                                      |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array $``     | Sort                                      | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     [3 0 2 1] $  ->  [0 1 2 3]       |
|          |                 |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| %        | ``Num Num %``   | Modulo                                    | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     27 5 %  ->  2                    |
|          |                 |                                           |                                      |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array Num %`` | Every nth                                 | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     [0 1 2 3 4] 2 %  ->  [0 2 4]     |
|          |                 |                                           |     [0 1 2 3 4] 3 %  ->  [0 3]       |
|          |                 |                                           |                                      |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``String Char   | Split by                                  | ::                                   |
|          | %``             |                                           |                                      |
|          |                 |                                           |     "1,2,3" ', %    ->  ["1" "2" "3"]|
|          | ``Array Array   |                                           |     "abcde" "bc" %  ->  ["a" "de"]   |
|          | %``             |                                           |     [1 2 3] [2] %   ->  [[1] [3]]    |
|          |                 |                                           |                                      |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array Block   | Map                                       | ::                                   |
|          | %``             |                                           |                                      |
|          |                 |                                           |     [1 2 3] {2*3+} %  ->  [5 7 9]    |
|          |                 |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| &        | ``Int Int &``   | Bitwise "and"                             | ::                                   |
|          |                 |                                           |                                      |
|          | ``Int Char &``  |                                           |     5 6 &  ->  4                     |
|          |                 |                                           |                                      |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array Any &`` | Setwise intersection                      | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     [6 1 8 1] [6 1 1 2] &  ->  [6 1] |
|          |                 |                                           |     "abcde" 'f &           ->  ""    |
|          |                 |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| (        | ``Num (``       | Decrement                                 | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     42 (   ->  41                    |
|          | ``Char (``      |                                           |     'b (   ->  'a                    |
|          |                 |                                           |                                      |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array (``     | Uncons from left                          | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     [2 7 1 8] (  ->  [7 1 8] 2       |
|          |                 |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+
| )        | ``Num )``       | Increment                                 | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     42 )   ->  43                    |
|          | ``Char )``      |                                           |     'b )   ->  'c                    |
|          |                 |                                           |                                      |
|          +-----------------+-------------------------------------------+--------------------------------------+
|          | ``Array )``     | Uncons from right                         | ::                                   |
|          |                 |                                           |                                      |
|          |                 |                                           |     [2 7 1 8] )  ->  [2 7 1] 8       |
|          |                 |                                           |                                      |
+----------+-----------------+-------------------------------------------+--------------------------------------+